/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ----------------------------------------------------------------------------------------------------------------------------------
            // |  ESC   |   1   |   2  |    3   |   4   |  5   |                   |  6   |    7     |  8  |  9  |  0  |   -   |   |  =  | LY0  | COPY |
            // |  TAB   |   Q   |   W  |    E   |   R   |  T   |                   |  Y   |    U     |  I  |  O  |  P  |   [   |   |  ]  | LY1  | PST  |
            // |  CAPS  |   A   |   S  |    D   |   F   |  G   |                   |  H   |    J     |  K  |  L  |  ;  |   '   |   |     |  UP  |      |
            // | SHIFT  |   Z   |   X  |    C   |   V   |  B   |                   |  N   |    M     |  ,  |  .  |  /  | SHIFT |   |  L  |  DN  |  R   |
            //                         |  CTRL  |  ALT  | DEL  | BKSP |    | SPACE | ETER | mo(FUNC) | WIN |

            bindings = <
                &kp ESC   &kp N1  &kp N2     &kp N3        &kp N4      &kp N5                                      &kp N6     &kp N7  &kp N8        &kp N9    &kp N0    &kp MINUS   &kp EQUAL  &mo 0   &kp LC(C)
                &kp TAB   &kp Q   &kp W      &kp E         &kp R       &kp T                                       &kp Y      &kp U   &kp I         &kp O     &kp P     &kp LBKT    &kp RBKT   &mo 1   &kp LC(V)
               &kp CAPS   &kp A   &kp S      &kp D         &kp F       &kp G                                       &kp H      &kp J   &kp K         &kp L     &kp SEMI  &kp APOS               &kp UP
              &kp LSHFT   &kp Z   &kp X      &kp C         &kp V       &kp B                                       &kp N      &kp M   &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT   &kp LEFT  &kp DOWN &kp RIGHT
                                             &kp LCTRL  &kp LEFT_ALT  &kp DELETE  &kp BACKSPACE         &kp SPACE  &kp ENTER  &mo 1   &kp LEFT_GUI
            >;
        };

        functions {
            // ---------------------------------------------------------------------------------------------------------------------------------- 
            // |   `   |   F1  |  F2 |  F3  |  F4  |  F5  |                        |  F6  |  F7   |  F8   |  F9  |  F10  |       | | Vol- | LY0 | Vol+ | 
            // |       |  BT1  | BT2 |  BT3 |  BT4 |  BT5 |                        |      |       |       |      |       |blu_clr| | Prev | LY1 | Next | 
            // | O_USB | O_BLE |     |      |      |      |                        |      |       |       |      |       |clr_all| |      | PgUp |      | 
            // |       |       |     |      |      |      |                        |      |       |       |      |       |       | | Home | PgDn | End  | 
            //                       |      |      |      |        |      |        |      |       |       |

            bindings = <
             &kp GRAVE   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans      &kp C_VOL_DN  &mo 0      &kp C_VOL_UP
                 &none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                          &trans  &trans  &trans  &trans   &trans      &bt BT_CLR  &tog 2        &mo 1      &tog 0
                 &none   &out OUT_TOG  &trans        &trans        &trans        &trans                                &trans  &trans  &trans  &trans   &trans      &bt BT_CLR_ALL            &kp PG_UP
                &trans   &trans        &trans        &trans        &trans        &trans                                &trans  &trans  &trans  &trans   &trans      &trans      &kp HOME      &kp PG_DN  &kp END
                                                     &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans
            >;
        };

        frog_left {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ----------------------------------------------------------------------------------------------------------------------------------
            // |  ESC   |   1   |   2  |    3   |   4   |  5   |                   |  6   |    7     |  8  |  9  |  0  |   -   |   |  =  | LY0  | COPY |
            // |  TAB   |   Q   |   W  |    E   |   R   |  T   |                   |  Y   |    U     |  I  |  O  |  P  |   [   |   |  ]  | LY1  | PST  |
            // |  CAPS  |   A   |   S  |    D   |   F   |  G   |                   |  H   |    J     |  K  |  L  |  ;  |   '   |   |     |  UP  |      |
            // | SHIFT  |   Z   |   X  |    C   |   V   |  B   |                   |  N   |    M     |  ,  |  .  |  /  | SHIFT |   |  L  |  DN  |  R   |
            //                         |  CTRL  |  ALT  | DEL  | BKSP |    | SPACE | ETER | mo(FUNC) | WIN |

            bindings = <
                &kp ESC   &kp N1  &kp N2     &kp N3        &kp N4      &kp N5                                      &kp N6     &kp N7  &kp N8        &kp N9    &kp N0    &kp MINUS   &kp EQUAL  &mo 0   &tog 0
                &kp TAB   &kp Q   &kp W      &kp E         &kp R       &kp T                                       &kp Y      &kp U   &kp I         &kp O     &kp P     &kp LBKT    &kp RBKT   &mo 1   &tog 0
               &kp CAPS   &kp A   &kp S      &kp D         &kp F       &kp G                                       &kp H      &kp J   &kp K         &kp L     &kp SEMI  &kp APOS               &kp UP
              &kp LSHFT   &kp Z   &kp X      &kp C         &kp V       &kp B                                       &kp N      &kp M   &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT   &kp LEFT  &kp DOWN &kp RIGHT
                                             &kp LCTRL  &kp LEFT_ALT  &kp BACKSPACE  &lt 3 SPACE        &kp SPACE  &kp ENTER  &mo 1   &kp LEFT_GUI
            >;
        };

        frog_right {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ----------------------------------------------------------------------------------------------------------------------------------
            // |  ESC   |   1   |   2  |    3   |   4   |  5   |                   |  6   |    7     |  8  |  9  |  0  |   -   |   |  =  | LY0  | COPY |
            // |  TAB   |   Q   |   W  |    E   |   R   |  T   |                   |  Y   |    U     |  I  |  O  |  P  |   [   |   |  ]  | LY1  | PST  |
            // |  CAPS  |   A   |   S  |    D   |   F   |  G   |                   |  H   |    J     |  K  |  L  |  ;  |   '   |   |     |  UP  |      |
            // | SHIFT  |   Z   |   X  |    C   |   V   |  B   |                   |  N   |    M     |  ,  |  .  |  /  | SHIFT |   |  L  |  DN  |  R   |
            //                         |  CTRL  |  ALT  | DEL  | BKSP |    | SPACE | ETER | mo(FUNC) | WIN |

            bindings = <
                &kp ESC   &kp N0     &kp N9     &kp N8        &kp N7      &kp N6                                      &kp N6     &kp N7  &kp N8        &kp N9    &kp N0    &kp MINUS   &kp EQUAL  &mo 0   &tog 0
                &kp TAB   &kp P      &kp O      &kp I         &kp U       &kp Y                                       &kp Y      &kp U   &kp I         &kp O     &kp P     &kp LBKT    &kp RBKT   &mo 1   &tog 0
              &kp ENTER   &kp SEMI   &kp L      &kp K         &kp J       &kp H                                       &kp H      &kp J   &kp K         &kp L     &kp SEMI  &kp APOS               &kp UP
              &kp LSHFT   &kp FSLH   &kp DOT    &kp COMMA     &kp M       &kp N                                       &kp N      &kp M   &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT   &kp LEFT  &kp DOWN &kp RIGHT
                                                &trans        &trans      &trans  &trans                   &kp SPACE  &kp ENTER  &mo 1   &kp LEFT_GUI
            >;
        };
    };
};
